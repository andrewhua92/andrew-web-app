{"version":3,"sources":["Styled.js","Home.js","Github.js","Contact.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["Background","styled","div","MyPaper","Paper","MyTabs","Tabs","MyTab","Tab","MyAvatar","Avatar","MyHeader1","h1","MyParagraph","p","ContentDiv","fadeIn","keyframes","fadeOut","SmoothDiv","props","out","Home","useState","visible","setVisible","useEffect","ListItemLink","ListItem","button","component","Github","List","href","target","ListItemIcon","ListItemText","primary","secondary","Divider","Contact","Content","value","setValue","style","width","alt","src","onChange","e","newValue","icon","marginLeft","App","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.916ca57b.chunk.js","sourcesContent":["import styled, { keyframes } from 'styled-components';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nimport \"fontsource-lato\";\r\nimport \"fontsource-roboto\";\r\n\r\nexport const Background = styled.div`\r\n    display: inline-block;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    position: fixed;\r\n    margin-left: -8px;\r\n    margin-top: -8px;\r\n    background: linear-gradient(270deg, #8154c8, #4b79cf, #4bc5cf);\r\n    background-size: 400% 400%;\r\n    animation: pulse 180s ease infinite;\r\n    z-index: -1;\r\n    @keyframes pulse {\r\n      0% {\r\n        background-position: 0% 50%;\r\n      }\r\n      50% {\r\n        background-position: 100% 50%;\r\n      }\r\n      100% {\r\n        background-position: 0% 50%;\r\n      }\r\n    }\r\n`;\r\n\r\nexport const MyPaper = styled(Paper)`\r\n    display: flex;\r\n    width: 70vw;\r\n    height: 90vh;\r\n    margin: auto;\r\n    margin-top: 40px;\r\n    && {\r\n        background: rgba(0,0,0,0.4);\r\n    }\r\n`;\r\n\r\nexport const MyTabs = styled(Tabs)`\r\n    && {\r\n        display: inline-block;\r\n        min-width:60vw;\r\n        height: 20px;\r\n        margin-left:auto;\r\n    }\r\n`;\r\n\r\nexport const MyTab = styled(Tab)`\r\n    && {\r\n        min-width: 15vw;\r\n        max-width: 20vw\r\n    }\r\n`;\r\n\r\nexport const MyAvatar = styled(Avatar)`\r\n    && {\r\n        height: 150px;\r\n        width: 150px;\r\n        margin: 30px;\r\n    }\r\n`;\r\n\r\nexport const MyHeader1 = styled.h1`\r\n    width:100%;\r\n    text-align: center;\r\n\r\n    font-family: 'Lato', sans-serif;\r\n    \r\n`;\r\n\r\nexport const MyParagraph = styled.p`\r\n    font-size: 1.3em;\r\n    font-family: 'Lato', sans-serif;\r\n`;\r\n\r\nexport const FlexDiv = styled.div`\r\n    display:block;\r\n    width:100%;\r\n`;\r\n\r\nexport const ContentDiv = styled.div`\r\n    display:flex;\r\n    height: 70px;\r\n    \r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst fadeOut = keyframes`\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\n// bless this guy for the sick fades \r\n// https://stackoverflow.com/questions/11679567/using-css-for-a-fade-in-effect-on-page-load\r\nexport const SmoothDiv = styled.div`\r\n    width: 75%;\r\n    visibility: ${props => props.out ? 'hidden' : 'visible'};\r\n    animation: ${props => props.out ? fadeOut : fadeIn} 1s linear;\r\n    transition: visibility 1s linear;\r\n  \r\n`\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    MyHeader1,\r\n    MyParagraph,\r\n    SmoothDiv\r\n} from './Styled'\r\n\r\nconst Home = () => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setVisible(true);\r\n        return setVisible(false);\r\n    }, []);\r\n\r\n    return (\r\n        <SmoothDiv out={visible}>\r\n            <MyHeader1>\r\n                Welcome to my personal web app!\r\n            </MyHeader1>\r\n            <MyParagraph>\r\n                My name is Andrew Hua, a 3A Computer Engineering student at\r\n                the University of Waterloo. Here, you can take a look at my\r\n                pretty background, go check my tabs for my GitHub projects,\r\n                or look at my other contact information. \r\n                <br/>\r\n                <br/>\r\n                I take great interests in the realm of entertainment, whether\r\n                it be playing games, watching shows, or playing some sports.\r\n                I also collect sneakers! While my major is Computer Engineering, \r\n                I happen to have a great interest in Software Engineering as well, \r\n                having most of my co-ops  thus far in software development, \r\n                mostly in Full Stack Development. My previous co-ops have been at\r\n                CARobotics, CareGuide, and XE.com.\r\n                <br/>\r\n                <br/>\r\n                My tech stack so far: Java, C++, C, VHDL, Git, Python, OpenCV,\r\n                Javascript, React.js, Ruby on Rails, and GraphQL.\r\n                <br/>\r\n                <br/>\r\n                This web app was made using React.js, styled-components,\r\n                and Materials-UI.\r\n            </MyParagraph>\r\n        </SmoothDiv>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    MyHeader1,\r\n    MyParagraph,\r\n    SmoothDiv\r\n} from './Styled';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\nimport GamesIcon from '@material-ui/icons/Games';\r\n\r\nfunction ListItemLink(props) {\r\n    return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nconst Github = () => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setVisible(true);\r\n        return setVisible(false);\r\n    }, []);\r\n\r\n    return (\r\n        <SmoothDiv out={visible}>\r\n            <MyHeader1>\r\n               Projects\r\n            </MyHeader1>\r\n            <List>\r\n                <ListItemLink\r\n                href=\"https://github.com/andrewhua92/andrew-web-app/\"\r\n                target=\"_blank\"\r\n                >\r\n                    <ListItemIcon>\r\n                        <WebIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText \r\n                    primary=\"andrew-web-app\"\r\n                    secondary=\"The very same web app you are seeing right now!\" \r\n                    />\r\n                </ListItemLink>\r\n                <Divider/>\r\n                <ListItemLink\r\n                href=\"https://www.github.com/andrewhua92/SunTracker/\"\r\n                target=\"_blank\"\r\n                >\r\n                    <ListItemIcon>\r\n                        <WbSunnyIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText \r\n                    primary=\"SunTracker\"\r\n                    secondary=\"A Hackathon Arduino Project meant to track the sun efficiently.\"\r\n                    />\r\n                </ListItemLink>\r\n                <Divider />\r\n                <ListItemLink \r\n                href=\"https://github.com/andrewhua92/AYJ-Simulator/\"\r\n                target=\"_blank\"\r\n                >\r\n                    <ListItemIcon>\r\n                        <SportsEsportsIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                    primary=\"AYJ-Simulator\" \r\n                    secondary=\"A Choose Your Own Adventure game from high school!\"\r\n                    />\r\n                </ListItemLink>\r\n                <Divider />\r\n                <ListItemLink \r\n                href=\"https://github.com/andrewhua92/lineFollower/\"\r\n                target=\"_blank\">\r\n                    <ListItemIcon>\r\n                        <VideocamIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                    primary=\"lineFollower\" \r\n                    secondary=\"A Python/Raspberry Pi rover that follows lines with a camera\"\r\n                    />\r\n                </ListItemLink>\r\n                <Divider />\r\n                <ListItemLink \r\n                href=\"https://github.com/andrewhua92/GPIO-python-library/\"\r\n                target=\"_blank\">\r\n                    <ListItemIcon>\r\n                        <SecurityIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                    primary=\"GPIO-python-library\" \r\n                    secondary=\"A custom Raspberry Pi library in Python for CARobot's sCHEESE module\"\r\n                    />\r\n                </ListItemLink>\r\n                <Divider />\r\n                <ListItemLink \r\n                href=\"https://github.com/andrewhua92/Chess/\"\r\n                target=\"_blank\">\r\n                    <ListItemIcon>\r\n                        <GamesIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                    primary=\"Chess\" \r\n                    secondary=\"Amateur attempt at recreating Chess in Java!\"\r\n                    />\r\n                </ListItemLink>\r\n            </List>\r\n        </SmoothDiv>\r\n    )\r\n}\r\n\r\nexport default Github","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    MyHeader1,\r\n    SmoothDiv,\r\n} from './Styled';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nfunction ListItemLink(props) {\r\n    return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nconst Contact = () => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setVisible(true);\r\n        return setVisible(false);\r\n    }, []);\r\n\r\n    return (\r\n        <SmoothDiv out={visible}>\r\n            <MyHeader1>\r\n                Contact Information\r\n            </MyHeader1>\r\n            <div>\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemIcon>\r\n                            <InboxIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText \r\n                        primary=\"Personal Email\"\r\n                        secondary=\"andrewhua90@gmail.com\" \r\n                        />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon>\r\n                            <DraftsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText \r\n                        primary=\"University Email\"\r\n                        secondary=\"a5hua@uwaterloo.ca\"\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItemLink \r\n                    href=\"https://www.github.com/andrewhua92/\"\r\n                    target=\"_blank\"\r\n                    >\r\n                        <ListItemIcon>\r\n                            <GitHubIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                        primary=\"GitHub\" \r\n                        secondary=\"github.com/andrewhua92\"\r\n                        />\r\n                    </ListItemLink>\r\n                    <ListItemLink \r\n                    href=\"https://www.linkedin.com/in/andrew-hua90/\"\r\n                    target=\"_blank\">\r\n                        <ListItemIcon>\r\n                            <LinkedInIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                        primary=\"LinkedIn\" \r\n                        secondary=\"linkedin.com/in/andrew-hua90\"\r\n                        />\r\n                    </ListItemLink>\r\n                </List>\r\n            </div>\r\n        </SmoothDiv>\r\n    )\r\n}\r\n\r\nexport default Contact","import React, { useState} from 'react'\r\nimport { \r\n    MyTabs, \r\n    MyTab, \r\n    MyAvatar, \r\n    ContentDiv \r\n} from './Styled'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Home from './Home';\r\nimport Github from './Github';\r\nimport Contact from './Contact';\r\n\r\n// TO DO: get github tab filled out\r\n// maybe fix contact info\r\n// make home content more homey\r\n// make sure this works on mobile (maybe)\r\n// dude, remove that white sliver (i thought this shit was 100vw wtf)\r\n\r\nconst Content = () => {\r\n\r\n    const [value, setValue] = useState(0)\r\n\r\n    const handleChange = (e, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ContentDiv style={{width: '90%'}}>\r\n                <MyAvatar alt='Andrew Hua' src='my_face.JPG'/>\r\n                <MyTabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                > \r\n                    <MyTab \r\n                        icon={<HomeIcon/>}\r\n                    />\r\n                    <MyTab \r\n                        icon={<GitHubIcon/>}\r\n                    />\r\n                    <MyTab \r\n                        icon={<FolderIcon/>}\r\n                    />\r\n                </MyTabs>\r\n            </ContentDiv>\r\n            <ContentDiv style={{marginLeft: \"250px\"}}>\r\n                {value === 0 ? \r\n                <Home/>: (value === 1 ? \r\n                <Github/> : \r\n                <Contact/>)\r\n                }\r\n            </ContentDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import React from 'react';\nimport { Background, MyPaper } from './Styled';\nimport Content from './Content'\n\nfunction App() {\n\n  return (\n    <Background>\n      <div textAlign='center'>\n        <MyPaper>\n          <Content/>\n        </MyPaper>\n      </div>\n    </Background>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}
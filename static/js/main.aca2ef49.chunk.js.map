{"version":3,"sources":["my_face.JPG","Styled.js","Home.js","Github.js","Contact.js","Content.js","App.js","index.js"],"names":["module","exports","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","Background","styled","div","MyPaper","Paper","MyTabs","Tabs","MyTab","Tab","MyAvatar","Avatar","ResponsiveHomeIcon","HomeIcon","ResponsiveGitHubIcon","GitHubIcon","ResponsiveFolderIcon","FolderIcon","MyList","List","MyListItem","ListItem","MyHeader1","h1","MyParagraph","p","HeaderContentDiv","ContentDiv","fadeIn","keyframes","fadeOut","SmoothDiv","props","out","Home","useState","visible","setVisible","useEffect","ListItemLink","button","component","Github","isLargeDesktop","useMediaQuery","query","isMobile","iconStyling","height","width","marginRight","Icons","Web","style","WbSunny","SportsEsports","Videocam","Security","Games","projectsData","map","primary","secondary","href","icon","target","ListItemIcon","ListItemText","primaryTypographyProps","fontSize","secondaryTypographyProps","Divider","Contact","maxWidth","margin","Content","value","setValue","isTabletOrMobileDevice","alt","src","require","onChange","e","newValue","centered","App","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aca2ef49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/my_face.19607c0d.JPG\";","import styled, { keyframes } from 'styled-components';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\n\r\nimport \"fontsource-lato\";\r\nimport \"fontsource-roboto\";\r\n\r\n// breakpoints idea courtesy of this article:\r\n// https://jsramblings.com/how-to-use-media-queries-with-styled-components/\r\nconst size = {\r\n    mobileS: '320px',\r\n    mobileM: '375px',\r\n    mobileL: '425px',\r\n    tablet: '768px',\r\n    laptop: '1024px',\r\n    laptopL: '1440px',\r\n    desktop: '2560px'\r\n};\r\n\r\nexport const device = {\r\n    mobileS: `(min-width: ${size.mobileS})`,\r\n    mobileM: `(min-width: ${size.mobileM})`,\r\n    mobileL: `(min-width: ${size.mobileL})`,\r\n    tablet: `(min-width: ${size.tablet})`,\r\n    laptop: `(min-width: ${size.laptop})`,\r\n    laptopL: `(min-width: ${size.laptopL})`,\r\n    desktop: `(min-width: ${size.desktop})`,\r\n    desktopL: `(min-width: ${size.desktop})`\r\n};\r\n\r\n\r\nexport const Background = styled.div`\r\n    display: inline-block;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    position: fixed;\r\n    margin-left: -8px;\r\n    margin-top: -8px;\r\n    background: linear-gradient(270deg, #8154c8, #4b79cf, #4bc5cf);\r\n    background-size: 400% 400%;\r\n    animation: pulse 180s ease infinite;\r\n    z-index: -1;\r\n    @keyframes pulse {\r\n      0% {\r\n        background-position: 0% 50%;\r\n      }\r\n      50% {\r\n        background-position: 100% 50%;\r\n      }\r\n      100% {\r\n        background-position: 0% 50%;\r\n      }\r\n    }\r\n`;\r\n\r\nexport const MyPaper = styled(Paper)`\r\n    && {\r\n        display: flex;\r\n        width: 90vw;\r\n        height: 90vh;\r\n        margin: auto;\r\n        margin-top: 40px;\r\n        background: rgba(0,0,0,0.3);\r\n        overflow: hidden;\r\n\r\n        @media ${device.tablet}{\r\n            width: 70vw;\r\n        }\r\n\r\n \r\n    }\r\n`;\r\n\r\nexport const MyTabs = styled(Tabs)`\r\n    && {\r\n        display: inline-block;\r\n        min-width:55vw;\r\n        height: 20px;\r\n        margin-left:auto;\r\n\r\n        @media ${device.laptopL} {\r\n            float: left;\r\n            min-width: 60vw;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MyTab = styled(Tab)`\r\n    && {\r\n        min-width: 25vw;\r\n        max-width: 25vw;\r\n\r\n        @media ${device.tablet} {\r\n            min-width:15vw;\r\n            max-width:20vw;\r\n        }\r\n\r\n    }\r\n\r\n`;\r\n\r\nexport const MyAvatar = styled(Avatar)`\r\n    && {\r\n        height: 6rem;\r\n        width: 6rem;\r\n        margin: 3rem;\r\n\r\n        @media ${device.desktopL} {\r\n            height: 12rem;\r\n            width: 12rem;\r\n            margin: 5rem;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ResponsiveHomeIcon = styled(HomeIcon)`\r\n    && {\r\n        @media ${device.desktopL} {\r\n            height: 2.5rem;\r\n            width: 2.5rem;\r\n            \r\n        }\r\n    }\r\n`;\r\n\r\nexport const ResponsiveGitHubIcon = styled(GitHubIcon)`\r\n    && {\r\n        @media ${device.desktopL} {\r\n            height: 2.5rem;\r\n            width: 2.5rem;\r\n            \r\n        }\r\n    }\r\n`;\r\n\r\nexport const ResponsiveFolderIcon = styled(FolderIcon)`\r\n    && {\r\n        @media ${device.desktopL} {\r\n            height: 2.5rem;\r\n            width: 2.5rem;\r\n            \r\n        }\r\n    }\r\n`;\r\n\r\nexport const MyList = styled(List)`\r\n    &&{\r\n        max-width: 40rem;\r\n        margin: auto;\r\n\r\n        @media ${device.desktopL} {\r\n            max-width: 60rem;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MyListItem = styled(ListItem)`\r\n    &&{\r\n        \r\n        \r\n    }\r\n`;\r\n\r\n\r\n\r\nexport const MyHeader1 = styled.h1`\r\n    width:100%;\r\n    text-align: center;\r\n    font-size: 1.1rem;\r\n    font-family: 'Lato', sans-serif;\r\n\r\n    @media ${device.mobileM} {\r\n        font-size: 1.25rem;\r\n    }\r\n\r\n    @media ${device.tablet} {\r\n        font-size: 1.7rem;\r\n    }\r\n    \r\n    @media ${device.desktopL} {\r\n        font-size: 3rem;\r\n    }\r\n`;\r\n\r\nexport const MyParagraph = styled.p`\r\n    font-size: 0.8rem;\r\n    font-family: 'Lato', sans-serif;\r\n    max-width: 40rem;\r\n    margin: auto;\r\n\r\n    @media ${device.mobileM} {\r\n        font-size: 0.9rem;\r\n    }\r\n\r\n    @media ${device.laptop} {\r\n        font-size: 1.1rem;\r\n    }\r\n\r\n    @media ${device.laptopL} {\r\n        font-size: 1.3rem;\r\n    }\r\n\r\n    @media ${device.desktopL} {\r\n        font-size: 2.2rem;\r\n        max-width: 70rem;\r\n        margin-top:3rem;\r\n    }\r\n`;\r\n\r\nexport const FlexDiv = styled.div`\r\n    display:block;\r\n    width:100%;\r\n`;\r\n\r\nexport const HeaderContentDiv = styled.div`\r\n    display: flex;\r\n    height: 4rem;\r\n    width: 90%;\r\n    margin-left: 0.5rem;\r\n\r\n    @media ${device.tablet} {\r\n        margin-left: 0;\r\n    }\r\n\r\n    @media ${device.desktopL} {\r\n        height: 7rem;\r\n    }\r\n`;\r\n\r\nexport const ContentDiv = styled.div`\r\n    display: flex;\r\n    height: 7rem;\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst fadeOut = keyframes`\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\n// bless this guy for the sick fades \r\n// https://stackoverflow.com/questions/11679567/using-css-for-a-fade-in-effect-on-page-load\r\nexport const SmoothDiv = styled.div`\r\n    width: 75%;\r\n    margin: auto;\r\n    visibility: ${props => props.out ? 'hidden' : 'visible'};\r\n    animation: ${props => props.out ? fadeOut : fadeIn} 1s linear;\r\n    transition: visibility 1s linear;\r\n  \r\n`;\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    MyHeader1,\r\n    MyParagraph,\r\n    SmoothDiv\r\n} from './Styled'\r\n\r\nconst Home = () => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setVisible(true);\r\n        return setVisible(false);\r\n    }, []);\r\n\r\n    return (\r\n        <SmoothDiv out={visible}>\r\n            <MyHeader1>\r\n                Welcome to my personal web app!\r\n            </MyHeader1>\r\n            <MyParagraph>\r\n                My name is Andrew Hua, a 3A Computer Engineering student at\r\n                the University of Waterloo. Here, you can take a look at my\r\n                pretty background, go check my tabs for my GitHub projects,\r\n                or look at my other contact information. \r\n                <br/>\r\n                <br/>\r\n                I take great interests in the realm of entertainment, whether\r\n                it be playing games, watching shows, or playing some sports.\r\n                I also collect sneakers! While my major is Computer Engineering, \r\n                I happen to have a great interest in Software Engineering as well, \r\n                having most of my co-ops  thus far in software development, \r\n                mostly in Full Stack Development. My previous co-ops have been at\r\n                CARobotics, CareGuide, and XE.com.\r\n                <br/>\r\n                <br/>\r\n                My tech stack so far: Java, C++, C, VHDL, Git, Python, OpenCV,\r\n                Javascript, React.js, Ruby on Rails, and GraphQL.\r\n                <br/>\r\n                <br/>\r\n                This web app was made using React.js, styled-components,\r\n                and Materials-UI.\r\n            </MyParagraph>\r\n        </SmoothDiv>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    MyHeader1,\r\n    SmoothDiv,\r\n    MyList,\r\n    MyListItem,\r\n} from './Styled';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\nimport GamesIcon from '@material-ui/icons/Games';\r\n\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport projectsData from './Projects.json';\r\n\r\n// TO-DO: \r\n// make this cleaner by mapping stuff \r\n\r\nfunction ListItemLink(props) {\r\n    return <MyListItem button component=\"a\" {...props} />;\r\n}\r\n\r\n\r\nconst Github = () => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const isLargeDesktop = useMediaQuery({\r\n        query: '(min-device-width: 2560px)'\r\n    });\r\n\r\n    const isMobile = useMediaQuery ({\r\n        query: '(min-device-width: 1024px)'\r\n    });\r\n\r\n    // easier to just apply this styling than to do an individual restyle of each icon\r\n    const iconStyling = {\r\n        height: isLargeDesktop ? \"2rem\" : \"\",\r\n        width: isLargeDesktop ? \"2rem\" : \"\",\r\n        marginRight: isLargeDesktop ? \"2rem\" : \"\"\r\n    };\r\n\r\n    const Icons = {\r\n        Web: <WebIcon style={iconStyling}/>,\r\n        WbSunny: <WbSunnyIcon style={iconStyling} />,\r\n        SportsEsports: <SportsEsportsIcon style={iconStyling}/>,\r\n        Videocam: <VideocamIcon style={iconStyling}/>,\r\n        Security: <SecurityIcon style={iconStyling}/>,\r\n        Games: <GamesIcon style={iconStyling}/>,\r\n    };\r\n\r\n    useEffect(() => {\r\n        setVisible(true);\r\n        return setVisible(false);\r\n    }, []);\r\n\r\n    return (\r\n        <SmoothDiv out={visible}>\r\n            <MyHeader1>\r\n               Projects\r\n            </MyHeader1>\r\n            <MyList>\r\n                {projectsData.map(({primary, secondary, href, icon}) => {\r\n                    return(\r\n                    <>\r\n                        <ListItemLink\r\n                        href={href}\r\n                        target=\"_blank\"\r\n                        >\r\n                            {isMobile &&\r\n                            <ListItemIcon>\r\n                                {Icons[icon]}\r\n                            </ListItemIcon>}\r\n                            <ListItemText \r\n                            primary={primary}\r\n                            secondary={secondary}\r\n                            primaryTypographyProps={{style: isLargeDesktop ? {fontSize: '2rem'} : (!isMobile ? {fontSize: '0.9rem'} :{})}}\r\n                            secondaryTypographyProps={{style: isLargeDesktop ? {fontSize: '1.5rem'} : (!isMobile ? {fontSize: '0.65rem'} : {})}}\r\n                            />\r\n                        </ListItemLink>\r\n                        <Divider/>\r\n                    </>\r\n                )})}\r\n            </MyList>\r\n        </SmoothDiv>\r\n    )\r\n}\r\n\r\nexport default Github","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    MyHeader1,\r\n    SmoothDiv,\r\n    MyList\r\n} from './Styled';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nfunction ListItemLink(props) {\r\n    return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nconst Contact = () => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const isLargeDesktop = useMediaQuery({\r\n        query: '(min-device-width: 2560px)'\r\n    });\r\n    \r\n    useEffect(() => {\r\n        setVisible(true);\r\n        return setVisible(false);\r\n    }, []);\r\n\r\n    return (\r\n        <SmoothDiv out={visible}>\r\n            <MyHeader1>\r\n                Contact Information\r\n            </MyHeader1>\r\n            <div>\r\n                <MyList>\r\n                    <ListItem>\r\n                        <ListItemIcon>\r\n                            <InboxIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText \r\n                        primary=\"Personal Email\"\r\n                        secondary=\"andrewhua90@gmail.com\" \r\n                        primaryTypographyProps={{style: isLargeDesktop ? {fontSize: '2rem'} : {}}}\r\n                        secondaryTypographyProps={{style: isLargeDesktop ? {fontSize: '1.5rem'} : {}}}\r\n                        />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon>\r\n                            <DraftsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText \r\n                        primary=\"University Email\"\r\n                        secondary=\"a5hua@uwaterloo.ca\"\r\n                        primaryTypographyProps={{style: isLargeDesktop ? {fontSize: '2rem'} : {}}}\r\n                        secondaryTypographyProps={{style: isLargeDesktop ? {fontSize: '1.5rem'} : {}}}\r\n                        />\r\n                    </ListItem>\r\n                </MyList>\r\n                <Divider style={{ maxWidth: '40rem', margin: 'auto'}}/>\r\n                <MyList>\r\n                    <ListItemLink \r\n                    href=\"https://www.github.com/andrewhua92/\"\r\n                    target=\"_blank\"\r\n                    >\r\n                        <ListItemIcon>\r\n                            <GitHubIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                        primary=\"GitHub\" \r\n                        secondary=\"github.com/andrewhua92\"\r\n                        primaryTypographyProps={{style: isLargeDesktop ? {fontSize: '2rem'} : {}}}\r\n                        secondaryTypographyProps={{style: isLargeDesktop ? {fontSize: '1.5rem'} : {}}}\r\n                        />\r\n                    </ListItemLink>\r\n                    <ListItemLink \r\n                    href=\"https://www.linkedin.com/in/andrew-hua90/\"\r\n                    target=\"_blank\">\r\n                        <ListItemIcon>\r\n                            <LinkedInIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                        primary=\"LinkedIn\" \r\n                        secondary=\"linkedin.com/in/andrew-hua90\"\r\n                        primaryTypographyProps={{style: isLargeDesktop ? {fontSize: '2rem'} : {}}}\r\n                        secondaryTypographyProps={{style: isLargeDesktop ? {fontSize: '1.5rem'} : {}}}\r\n                        />\r\n                    </ListItemLink>\r\n                </MyList>\r\n            </div>\r\n        </SmoothDiv>\r\n    )\r\n}\r\n\r\nexport default Contact","import React, { useState} from 'react'\r\nimport { \r\n    MyTabs, \r\n    MyTab, \r\n    MyAvatar, \r\n    ContentDiv,\r\n    HeaderContentDiv,\r\n    ResponsiveHomeIcon,\r\n    ResponsiveGitHubIcon,\r\n    ResponsiveFolderIcon\r\n} from './Styled'\r\n\r\nimport Home from './Home';\r\nimport Github from './Github';\r\nimport Contact from './Contact';\r\n\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\n// TO DO: get github tab filled out\r\n// maybe fix contact info\r\n// make home content more homey\r\n// make sure this works on mobile (maybe)\r\n// dude, remove that white sliver (i thought this shit was 100vw wtf)\r\n\r\nconst Content = () => {\r\n\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (e, newValue) => {\r\n        setValue(newValue)\r\n    };\r\n\r\n\r\n    const isTabletOrMobileDevice = useMediaQuery({\r\n        query: '(min-device-width: 1440px)'\r\n      });\r\n\r\n    const isLargeDesktop = useMediaQuery({\r\n        query: '(min-device-width: 2560px)'\r\n    })\r\n\r\n\r\n    return (\r\n        <div style = {{width: 'inherit' }}>\r\n            <HeaderContentDiv>\r\n                {isTabletOrMobileDevice && \r\n                <MyAvatar alt='Andrew Hua' src={require('./my_face.JPG')}/>}\r\n                <MyTabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    style={{height: isLargeDesktop ? '5rem' : '3rem'}}\r\n                    centered={!isTabletOrMobileDevice}\r\n                > \r\n                    <MyTab \r\n                        style={{height: isLargeDesktop ? '5rem' : '3rem'}}\r\n                        icon={<ResponsiveHomeIcon/>}\r\n                    />\r\n                    <MyTab \r\n                        style={{height: isLargeDesktop ? '5rem' : '3rem'}}\r\n                        icon={<ResponsiveGitHubIcon/>}\r\n                    />\r\n                    <MyTab \r\n                        style={{height: isLargeDesktop ? '5rem' : '3rem'}}\r\n                        icon={<ResponsiveFolderIcon/>}\r\n                    />\r\n                </MyTabs>\r\n            </HeaderContentDiv>\r\n            <ContentDiv>\r\n                {value === 0 ? \r\n                <Home/>: (value === 1 ? \r\n                <Github/> : \r\n                <Contact/>)\r\n                }\r\n            </ContentDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import React from 'react';\nimport { Background, MyPaper } from './Styled';\nimport Content from './Content'\n\nfunction App() {\n\n  return (\n    <Background>\n      <div textAlign='center'>\n        <MyPaper>\n          <Content/>\n        </MyPaper>\n      </div>\n    </Background>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}